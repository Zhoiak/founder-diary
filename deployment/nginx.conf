# Founder Diary - Nginx Configuration
# Prepared for future scaling: multiple domains, API separation, load balancing

events {
    worker_connections 2048;
    use epoll;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Upstreams
    upstream app {
        server app:3000 max_fails=3 fail_timeout=30s;
        # Future: Add multiple instances for load balancing
        # server app2:3000;
        # server app3:3000;
    }

    upstream pgadmin {
        server pgadmin:80;
    }

    # Future: API upstream (when separated)
    # upstream api {
    #     server api:3000;
    # }

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=50r/s;

    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=addr:10m;
    limit_conn addr 10;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 50M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript 
               application/javascript application/xml+rss 
               application/json application/x-javascript 
               image/svg+xml;

    # Cache settings for static files
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=static_cache:10m 
                     max_size=1g inactive=60m use_temp_path=off;

    # WebSocket upgrade mapping
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    # SSL configuration (shared)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security headers (shared)
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # ================================================================
    # HTTP to HTTPS redirect for all domains
    # ================================================================
    server {
        listen 80;
        server_name founder-diary.com www.founder-diary.com 
                    pg.founder-diary.com
                    85.10.194.199;
        
        # Allow Let's Encrypt challenges
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        # Redirect everything else to HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # ================================================================
    # MAIN APP: founder-diary.com (HTTPS)
    # ================================================================
    server {
        listen 443 ssl http2;
        server_name founder-diary.com www.founder-diary.com;

        # SSL certificates (use Let's Encrypt)
        ssl_certificate /etc/nginx/ssl/founder-diary.com/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/founder-diary.com/key.pem;

        # HSTS
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

        # Static files caching
        location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff|woff2|ttf|svg)$ {
            proxy_pass http://app;
            proxy_cache static_cache;
            proxy_cache_valid 200 1d;
            proxy_cache_use_stale error timeout invalid_header updating;
            add_header X-Cache-Status $upstream_cache_status;
            expires 30d;
        }

        # API endpoints with rate limiting
        location /api/auth/ {
            limit_req zone=auth burst=10 nodelay;
            proxy_pass http://app;
            include /etc/nginx/proxy_params.conf;
        }

        location /api/ {
            limit_req zone=api burst=50 nodelay;
            proxy_pass http://app;
            include /etc/nginx/proxy_params.conf;
            
            # Future: Separate API service
            # proxy_pass http://api;
        }

        # Main app (with general rate limiting)
        location / {
            limit_req zone=general burst=100 nodelay;
            proxy_pass http://app;
            include /etc/nginx/proxy_params.conf;
        }

        # Health check endpoint (no rate limit)
        location /health {
            proxy_pass http://app;
            access_log off;
        }
    }

    # ================================================================
    # PGADMIN: pg.founder-diary.com (HTTPS)
    # ================================================================
    server {
        listen 443 ssl http2;
        server_name pg.founder-diary.com;

        # SSL certificates
        ssl_certificate /etc/nginx/ssl/pg.founder-diary.com/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/pg.founder-diary.com/key.pem;

        # HSTS
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

        # IP whitelist (optional, for extra security)
        # allow 85.10.194.199;
        # allow YOUR_HOME_IP;
        # deny all;

        location / {
            proxy_pass http://pgadmin;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Script-Name /;
            proxy_redirect off;
        }
    }


    # ================================================================
    # FALLBACK: IP access (HTTP only, for testing)
    # ================================================================
    server {
        listen 80 default_server;
        server_name 85.10.194.199 _;
        
        location / {
            proxy_pass http://app;
            include /etc/nginx/proxy_params.conf;
        }
    }
}

# Future scaling notes:
# 1. Add load balancing: upstream app { server app1:3000; server app2:3000; }
# 2. Add API separation: separate upstream and server block for api.founder-diary.com
# 3. Add Redis Commander: redis.founder-diary.com (internal only)
# 4. Add MinIO Console: minio.founder-diary.com
# 5. Add Grafana: grafana.founder-diary.com
